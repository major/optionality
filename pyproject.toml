[project]
name = "optionality"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "Major Hayden", email = "major@mhtx.net" }]
requires-python = ">=3.13,<3.14"
dependencies = [
    "boto3>=1.35.0",
    "deltalake>=0.17.0",
    "duckdb>=1.4.1",
    "fsspec>=2025.9.0",
    "loguru>=0.7.0",
    "pandas-market-calendars>=5.1.1",
    "polars>=1.34.0",
    "polars-talib>=0.1.5",
    "polygon-api-client>=1.14.0",
    "pyarrow>=18.0.0",
    "pydantic-settings>=2.11.0",
    "rich>=13.0.0",
    "s3fs>=2024.10.0",
    "tenacity>=9.0.0",
    "zstandard>=0.25.0",
]

[project.scripts]
optionality = "optionality:main"

[build-system]
requires = ["uv_build>=0.9.2,<0.10.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pyright>=1.1.403",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-randomly>=3.16.0",
    "radon>=6.0.1",
    "ruff>=0.12.5",
    "vulture>=2.14",
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-branch",
    "--color=yes",
    "--log-disable=all",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
testpaths = ["tests"]

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.ruff]
fix = true

[tool.ruff.format]
preview = true
